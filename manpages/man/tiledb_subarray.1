.TH tiledb_subarray 1 "13 October 2015" "Version 0.1" "TileDB programs"
 
.SH NAME
tiledb_subarray - creates a new array with the same schema as the input array
(or including a subset of the attributes in a potentially different order), 
conataining only the cells that lie in the input range (i.e., hyper-rectangle). 

.SH SYNOPSIS
.B tiledb_subarray 
.BI "-A " "array_name,array_name_sub " "-r " "range "
.br
[
.BI "-w " "workspace,workspace_sub "
] [
.BI "-g " "group,group_sub "
] [
.BI "-a " "attribute_name_1,..."
] 

.SH DESCRIPTION
.B tiledb_subarray
creates a new array with the same schema as the input array (or including a 
subset of the attributes in a potentially different order), 
conataining only the cells that lie in the input range. The range must be a 
hyper-rectangle that is completely contained in the dimension space. It is also
given as a sequence of [low,high] pairs across each dimension. 
On error, it returns \fB-1\fR. Moreover, if it is compiled in \fBVERBOSE\fR 
mode, it prints comprehensive error messages on \fIstderr\fR. On success, it 
returns \fB0\fR. 

The following conventions apply to the \fBSYNOPSIS\fR section:

.TS
tab (@);
c lx .
\fBbold text\fR @ type exactly as shown
\fIitalic text\fR @ replace with appropriate argument
[\fB\-a \fIarg\fR]@ any or all options within [ ] are optional
.TE

.SH OPTIONS
.TP
.BI "-w" " workspace,workspace_sub" "\fR, \
" \fB --workspace=\fIworkspace,workspace_sub\fR  
The path to the workspace folder where the input array is stored, followed by
the workspace of the subarray result. If no workspace is provided, the current 
working directory is set as the workspace by default for both the input
and result arrays. If one workspace is provided, then this corresponds to the
workspace of the input array, but it will also be the workspace of the output
array as well.

.TP
.BI "-g" " group,group_sub" "\fR, " \fB --group=\fIgroup,group_sub\fR  
This is a directory inside the workspace where the input array is stored, 
followed by the directory (inside its respective workspace) where the
output subarray will be stored. Note that any group path provided is converted 
into an absolute path \fBrelative to its corresponding workspace directory\fR, 
i.e., regarding all home ("\\~/"), current ("./") and root ("/") as its 
workspace directory. If the group is not provided, the corresponding workspaces 
are set as the default groups for both input and output arrays. If one group is 
provided, then this corresponds to the input array, whereas the group of the 
output array is simply its workspace by default.

.TP
.BI "-A" " array_name,array_name_sub" "\fR, \
" \fB --array-name=\fIarray_name,array_name_sub\fR  
The name of the array the subarray will be applied on, followed by the name
of the result. The input array must be already defined. The name of the 
output array must be in POSIX format. 

.TP
.BI "-r" " range" "\fR, " \fB --range=\fIrange\fR  
The range given as a sequence of [low,high] bounds across each dimension.
Each range bound must be a real number. 

.TP
.BI "-a" " attribute_name_1,..." "\fR, " \
\fB --attribute-names=\fIattribute_name_1,...\fR  
The attributes to be included in the array schema of the output array. Any order
is allowed. To export \fBall\fR attributes, omit the option.

.SH EXAMPLES
Assuming that the array has dimensions \fIdim1\fR,\fIdim2\fR with domains
[0,100] and [0,200], respectively, and attributes 
\fIattr1\fR,\fIattr2\fR,\fIattr3\fR
.TP
\fBtiledb_subarray\fR \\ 
    \fB-w \fRmy_workspace/,my_workspace_sub/ \\
    \fB-g \fRmy_group/,my_group_sub/ \\
    \fB-A \fRmy_array,my_array_sub \\
    \fB-r \fR10,20,100,150 

Creates a new array \fImy_array_sub\fR with exactly the same schema as
\fImy_array\fR, but only containing the cells with \fIdim1\fR in 
\fB[10,20]\fR and \fIdim2\fR in \fB[100,150]\fR. The input array is
stored in \fImy_workspace/my_group/my_array\fR, whereas the output
array is stored in \fImy_workspace_sub/my_group_sub/my_array_sub\fR.

.TP
\fBtiledb_subarray\fR \\ 
    \fB-w \fRmy_workspace/,my_workspace_sub/ \\
    \fB-g \fRmy_group/,my_group_sub/ \\
    \fB-A \fRmy_array,my_array_sub \\
    \fB-r \fR10,20,100,150 \\ 
    \fB-a \fRattr1,attr2 

Same as the first example, but now \fImy_array_sub\fR contains only two
attributes, namely \fIattr1\fR and \fIattr2\fR.

.TP
\fBtiledb_subarray\fR \\ 
    \fB-w \fRmy_workspace/ \\
    \fB-g \fRmy_group/ \\
    \fB-A \fRmy_array,my_array_sub \\
    \fB-r \fR10,20,100,150 \\ 
    \fB-a \fRattr2,attr1

Same as the second example, but \fIattr1\fR and \fIattr2\fR appear
in a different order in \fImy_array_sub\fR. Also the output array
is stored in the same workspace and group as the input array,
namely \fImy_workspace/my_group/my_array\fR.

.SH EXIT STATUS
.TP 
\fB0\fR for success and \fB-1\fR for error.

.SH SEE ALSO
.BR "tiledb_array_define" "(1) 

.SH AUTHOR
Stavros Papadopoulos <http://people.csail.mit.edu/stavrosp>, Copyright (c) 2015
