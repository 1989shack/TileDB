name: rtools40

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        include: [
          { msystem: MINGW64, toolchain: x86_64 },
          { msystem: MINGW32, toolchain: i686 },
          { msystem: ucrt64, toolchain: "ucrt-x86_64" }
        ]
      fail-fast: false
    env:
      TILEDB_HOME: ${{ github.workspace }}
      MINGW_INSTALLS: ${{ matrix.msystem }}
      MINGW_ARCH: ${{ matrix.msystem }}
      MINGW_TOOLCHAIN: ${{ matrix.toolchain }}
      PACMAN_REPOSITORY: ${{ matrix.msystem }}
    steps:
      - name: Prepare git
        run: git config --global core.autocrlf false
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Building TileDB with Rtools40
        run: |
          set -x
          cmake --version
          cd ${GITHUB_WORKSPACE}/.github/workflows/mingw-w64-tiledb
          pacman -Sy
          pacman -Fy
          echo 'pacman -Q...'
          pacman -Q
          echo 'pacman -Qe...'
          pacman -Qe
          echo 'pacman -Ss regex...'
          pacman -Ss regex
          echo 'pacman -Fx regex...'
          if [[ $(pacman -Fx regex) ]]; then
            pacman -Fx regex
            echo 'success? pacman -Fx regex'
          else
            echo 'failed, pacman -Fx regex'
          fi
          echo 'mount...'
          mount
          echo 'find *regex*'
          if [[ $(find / -name '*regex*') ]] ; then
            find / -name '*regex*' || true
            echo 'found *regex*'
          else
            echo 'unable to find *regex*'
          fi
          makepkg-mingw --noconfirm --syncdeps
        env:
          TILEDB_HOME: ${{ github.workspace }}
          MINGW_INSTALLS: ${{ matrix.msystem }}
        shell: c:\rtools40\usr\bin\bash.exe --login {0}
      - name: "Upload binaries"
        uses: actions/upload-artifact@v2
        with:
          name: mingw-w64-${{ matrix.msystem }}-tiledb
          path: .github/workflows/mingw-w64-tiledb/*.pkg.tar.*
